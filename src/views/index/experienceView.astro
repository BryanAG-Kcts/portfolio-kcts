---
import { getCollection } from 'astro:content'
import { ChevronRight } from 'lucide-react'
import ExperienceCard from '@/components/experience/experienceCard.astro'
import type { Languages } from '@/interfaces/i18n'
import SectionLayout from '@/layout/sectionLayout.astro'
import WidthLayout from '@/layout/widthLayout.astro'

interface Props {
  lang: Languages
}

const { lang } = Astro.props
const [experience] = await getCollection(
  'experience',
  ({ slug }) => slug === lang
)
---

<WidthLayout size="sm">
  <SectionLayout title={experience.body} sub={experience.data.sub}>
    <section id="experience" class="grid grid-cols-[1fr_5fr] gap-y-20 relative overflow-hidden">
      {experience.data.line.map((data, index) => (
        <div class="flex justify-center">
            <span class="size-10 rounded-full bg-primary z-10 flex items-center justify-center time-line-point" >
                <ChevronRight className="size-7 text-primary-foreground" />
            </span>
            {!index && <div class="absolute rounded-full w-0.5 h-full gradient-line time-line-item" />}
        </div>
        <ExperienceCard {...data} />
    ))}
  </section>
</SectionLayout>
</WidthLayout>

<style>
.gradient-line {
  background: linear-gradient(
    0deg,
    rgba(69, 222, 196, 0) 0%,
    var(--secondary) 25%,
    var(--muted) 37.51%,
    var(--primary) 92.91%
  );
}
</style>

<script>
  import { scrollShowScale } from "@/constants/animation/scrollShowScale";
  import { scrollShow } from "@/constants/animation/scrollShow";
  import { xScrollFadeIn } from "@/constants/animation/scrollFadeIn";
  scrollShowScale('.time-line-point')
  scrollShow('.time-line-item')
  xScrollFadeIn('.experience-card', 1.5)
</script>